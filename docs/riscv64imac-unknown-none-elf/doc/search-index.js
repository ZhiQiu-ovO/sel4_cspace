var searchIndex = JSON.parse('{\
"sel4_cspace":{"doc":"","t":"AAARFFFFFNNNNNNNNNNNNENNNLLLLLLLLLLLLMDMLLLLLMFFFDLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLDLLLLLLLLLLLLLLLLLMFLFDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMM","n":["compatibility","deps","interface","ZombieType_ZombieTCB","Zombie_new","Arch_finaliseCap","finaliseCap","post_cap_deletion","preemptionPoint","CapASIDControlCap","CapASIDPoolCap","CapCNodeCap","CapDomainCap","CapEndpointCap","CapFrameCap","CapIrqControlCap","CapIrqHandlerCap","CapNotificationCap","CapNullCap","CapPageTableCap","CapReplyCap","CapTag","CapThreadCap","CapUntypedCap","CapZombieCap","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cap","cap_t","cleanupInfo","clone","clone","clone","clone","clone","cteMDBNode","cte_insert","cte_move","cte_swap","cte_t","default","default","default","default","default","delete_all","delete_one","derive_cap","ensure_no_children","eq","eq","eq","eq","eq","finaliseCap_ret","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_word","get_allow_grant","get_allow_grant_reply","get_allow_read","get_allow_write","get_asid_base","get_asid_pool","get_cap_is_physical","get_cap_ptr","get_cap_size_bits","get_cap_type","get_cnode_guard","get_cnode_guard_size","get_cnode_ptr","get_cnode_radix","get_ep_badge","get_ep_can_grant","get_ep_can_grant_reply","get_ep_can_receive","get_ep_can_send","get_ep_ptr","get_first_badged","get_frame_base_ptr","get_frame_is_device","get_frame_mapped_address","get_frame_mapped_asid","get_frame_size","get_frame_vm_rights","get_irq_handler","get_next","get_nf_badge","get_nf_can_receive","get_nf_can_send","get_nf_ptr","get_offset_slot","get_prev","get_pt_base_ptr","get_pt_is_mapped","get_pt_mapped_address","get_pt_mapped_asid","get_ptr","get_reply_can_grant","get_reply_master","get_reply_tcb_ptr","get_revocable","get_tcb_ptr","get_type","get_type","get_type","get_untyped_block_size","get_untyped_free_index","get_untyped_is_device","get_untyped_ptr","get_zombie_bit","get_zombie_id","get_zombie_number","get_zombie_ptr","get_zombie_type","insert_new_cap","into","into","into","into","into","into","isArchCap","is_final_cap","is_long_running_delete","mdb_node_t","new","new","new_asid_control_cap","new_asid_pool_cap","new_cnode_cap","new_domain_cap","new_endpoint_cap","new_frame_cap","new_irq_control_cap","new_irq_handler_cap","new_notification_cap","new_null_cap","new_page_table_cap","new_reply_cap","new_thread_cap","new_untyped_cap","new_zombie_cap","remainder","resolve_address_bits","revoke","same_object_as","seL4_CapRights_t","set_allow_grant","set_allow_grant_reply","set_allow_read","set_allow_write","set_asid_base","set_asid_pool","set_cnode_guard","set_cnode_guard_size","set_cnode_ptr","set_cnode_radix","set_ep_badge","set_ep_can_grant","set_ep_can_grant_reply","set_ep_can_receive","set_ep_can_send","set_ep_ptr","set_first_badged","set_frame_base_ptr","set_frame_is_device","set_frame_mapped_address","set_frame_mapped_asid","set_frame_size","set_frame_vm_rights","set_irq_handler","set_next","set_nf_badge","set_nf_can_receive","set_nf_can_send","set_nf_ptr","set_prev","set_pt_base_ptr","set_pt_is_mapped","set_pt_mapped_address","set_pt_mapped_asid","set_reply_can_grant","set_reply_master","set_reply_tcb_ptr","set_revocable","set_tcb_ptr","set_untyped_block_size","set_untyped_free_index","set_untyped_is_device","set_untyped_ptr","set_zombie_id","set_zombie_number","set_zombie_type","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_data","words","words","words"],"q":[[0,"sel4_cspace"],[3,"sel4_cspace::compatibility"],[5,"sel4_cspace::deps"],[9,"sel4_cspace::interface"]],"d":["兼容c风格的接口，后续会删除","需要外部实现的接口","暴露给外部的接口 …","","创建一个新的<code>Zombie Cap</code>","","","","","","","","","","","","","","","","","Cap 在内核态中的种类枚举","","","","","","","","","","","","","","","","","","","","","","","","","将一个cap插入slot中并维护能力派生树","将一个cap插入slot中并删除原节点","交换两个slot，并将新的cap数据填入","由cap_t和 mdb_node …","","","","","","将当前的<code>cte slot</code>中的能力清除，因为可能是…","将当前的<code>cte slot</code>中的能力清除,要求<code>cap</code>…","派生出一个新的与给定<code>cap</code>相同的<code>capability</code>","判断当前<code>cte</code>是否存在派生出来的子节点","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","判断是否该<code>cap</code>…","","获得每一个<code>cap</code>管理的对象的大小","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","向<code>parent</code>之后插入一个新的<code>slot</code>，<code>slot</code>的<code>capability</code>…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","判断该<code>Cap</code>是否与架构相关，如<code>CapPageTableCap</code>…","判断当前<code>cte</code>…","","","","","","","","","","","","","","","","","","","","","从cspace寻址特定的slot","","…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,0,9,9,9,9,2,3,4,5,6,9,2,3,4,5,6,4,0,6,2,3,4,5,6,4,0,0,0,0,2,3,4,5,6,4,4,4,4,9,2,3,5,6,0,9,2,3,5,6,9,2,3,4,5,6,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,5,2,2,2,2,4,5,2,2,2,2,4,2,2,2,5,2,2,3,5,2,2,2,2,2,2,2,2,2,0,9,2,3,4,5,6,2,4,4,0,3,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6,0,4,0,0,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,5,2,2,2,2,5,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,9,2,3,4,5,6,9,2,3,4,5,6,9,2,3,4,5,6,2,2,3,5],"f":[0,0,0,0,[[1,1,1],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[2,2],[3,3],[4,4],[5,5],[6,6],0,[[2,4,4]],[[2,4,4]],[[2,4,2,4]],0,[[],2],[[],3],[[],4],[[],5],[[],6],[[4,7],8],[4],0,[4,8],[[9,9],7],[[2,2],7],[[3,3],7],[[5,5],7],[[6,6],7],0,[[9,10],11],[[2,10],11],[[3,10],11],[[5,10],11],[[6,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[1,3],[3,1],[3,1],[3,1],[3,1],[2,1],[2,1],[2,7],[2,1],[2,1],[2,9],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[5,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[5,1],[2,1],[2,1],[2,1],[2,1],[[4,1],4],[5,1],[2,1],[2,1],[2,1],[2,1],[4,1],[2,1],[2,1],[2,1],[5,1],[2,1],[2,1],[3,1],[5,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[[4,4,2]],[[]],[[]],[[]],[[]],[[]],[[]],[2,7],[4,7],[4,7],0,[[1,1,1,1],3],[[1,1,1,1],5],[[],2],[[1,1],2],[[1,1,1,1],2],[[],2],[[1,1,1,1,1,1],2],[[1,1,1,1,1,1],2],[[],2],[1,2],[[1,1,1,1],2],[[],2],[[1,1,1,1],2],[[1,1,1],2],[1,2],[[1,1,1,1],2],[[1,1],2],0,0,[4,8],[[2,2],7],0,[[3,1]],[[3,1]],[[3,1]],[[3,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[5,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[5,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[5,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[5,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[2,1]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[2,7,1],2],0,0,0],"c":[],"p":[[15,"usize"],[3,"cap_t"],[3,"seL4_CapRights_t"],[3,"cte_t"],[3,"mdb_node_t"],[3,"finaliseCap_ret"],[15,"bool"],[4,"exception_t"],[4,"CapTag"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
